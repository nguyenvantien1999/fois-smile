package com.fois.Back_end_fois_smile.entity;

import java.util.ArrayList;
import java.util.List;
import java.util.Date;
import java.util.Iterator;

public class TestTranscriptExample {
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table schema01.test_transcript
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    protected String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table schema01.test_transcript
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    protected boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table schema01.test_transcript
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.test_transcript
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public TestTranscriptExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.test_transcript
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.test_transcript
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.test_transcript
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.test_transcript
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.test_transcript
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.test_transcript
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.test_transcript
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.test_transcript
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.test_transcript
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.test_transcript
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table schema01.test_transcript
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andMabdIsNull() {
            addCriterion("mabd is null");
            return (Criteria) this;
        }

        public Criteria andMabdIsNotNull() {
            addCriterion("mabd is not null");
            return (Criteria) this;
        }

        public Criteria andMabdEqualTo(Integer value) {
            addCriterion("mabd =", value, "mabd");
            return (Criteria) this;
        }

        public Criteria andMabdNotEqualTo(Integer value) {
            addCriterion("mabd <>", value, "mabd");
            return (Criteria) this;
        }

        public Criteria andMabdGreaterThan(Integer value) {
            addCriterion("mabd >", value, "mabd");
            return (Criteria) this;
        }

        public Criteria andMabdGreaterThanOrEqualTo(Integer value) {
            addCriterion("mabd >=", value, "mabd");
            return (Criteria) this;
        }

        public Criteria andMabdLessThan(Integer value) {
            addCriterion("mabd <", value, "mabd");
            return (Criteria) this;
        }

        public Criteria andMabdLessThanOrEqualTo(Integer value) {
            addCriterion("mabd <=", value, "mabd");
            return (Criteria) this;
        }

        public Criteria andMabdIn(List<Integer> values) {
            addCriterion("mabd in", values, "mabd");
            return (Criteria) this;
        }

        public Criteria andMabdNotIn(List<Integer> values) {
            addCriterion("mabd not in", values, "mabd");
            return (Criteria) this;
        }

        public Criteria andMabdBetween(Integer value1, Integer value2) {
            addCriterion("mabd between", value1, value2, "mabd");
            return (Criteria) this;
        }

        public Criteria andMabdNotBetween(Integer value1, Integer value2) {
            addCriterion("mabd not between", value1, value2, "mabd");
            return (Criteria) this;
        }

        public Criteria andDiemIsNull() {
            addCriterion("diem is null");
            return (Criteria) this;
        }

        public Criteria andDiemIsNotNull() {
            addCriterion("diem is not null");
            return (Criteria) this;
        }

        public Criteria andDiemEqualTo(Float value) {
            addCriterion("diem =", value, "diem");
            return (Criteria) this;
        }

        public Criteria andDiemNotEqualTo(Float value) {
            addCriterion("diem <>", value, "diem");
            return (Criteria) this;
        }

        public Criteria andDiemGreaterThan(Float value) {
            addCriterion("diem >", value, "diem");
            return (Criteria) this;
        }

        public Criteria andDiemGreaterThanOrEqualTo(Float value) {
            addCriterion("diem >=", value, "diem");
            return (Criteria) this;
        }

        public Criteria andDiemLessThan(Float value) {
            addCriterion("diem <", value, "diem");
            return (Criteria) this;
        }

        public Criteria andDiemLessThanOrEqualTo(Float value) {
            addCriterion("diem <=", value, "diem");
            return (Criteria) this;
        }

        public Criteria andDiemIn(List<Float> values) {
            addCriterion("diem in", values, "diem");
            return (Criteria) this;
        }

        public Criteria andDiemNotIn(List<Float> values) {
            addCriterion("diem not in", values, "diem");
            return (Criteria) this;
        }

        public Criteria andDiemBetween(Float value1, Float value2) {
            addCriterion("diem between", value1, value2, "diem");
            return (Criteria) this;
        }

        public Criteria andDiemNotBetween(Float value1, Float value2) {
            addCriterion("diem not between", value1, value2, "diem");
            return (Criteria) this;
        }

        public Criteria andMatkIsNull() {
            addCriterion("matk is null");
            return (Criteria) this;
        }

        public Criteria andMatkIsNotNull() {
            addCriterion("matk is not null");
            return (Criteria) this;
        }

        public Criteria andMatkEqualTo(Integer value) {
            addCriterion("matk =", value, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkNotEqualTo(Integer value) {
            addCriterion("matk <>", value, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkGreaterThan(Integer value) {
            addCriterion("matk >", value, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkGreaterThanOrEqualTo(Integer value) {
            addCriterion("matk >=", value, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkLessThan(Integer value) {
            addCriterion("matk <", value, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkLessThanOrEqualTo(Integer value) {
            addCriterion("matk <=", value, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkIn(List<Integer> values) {
            addCriterion("matk in", values, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkNotIn(List<Integer> values) {
            addCriterion("matk not in", values, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkBetween(Integer value1, Integer value2) {
            addCriterion("matk between", value1, value2, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkNotBetween(Integer value1, Integer value2) {
            addCriterion("matk not between", value1, value2, "matk");
            return (Criteria) this;
        }

        public Criteria andMabaiktIsNull() {
            addCriterion("mabaikt is null");
            return (Criteria) this;
        }

        public Criteria andMabaiktIsNotNull() {
            addCriterion("mabaikt is not null");
            return (Criteria) this;
        }

        public Criteria andMabaiktEqualTo(String value) {
            addCriterion("mabaikt =", value, "mabaikt");
            return (Criteria) this;
        }

        public Criteria andMabaiktNotEqualTo(String value) {
            addCriterion("mabaikt <>", value, "mabaikt");
            return (Criteria) this;
        }

        public Criteria andMabaiktGreaterThan(String value) {
            addCriterion("mabaikt >", value, "mabaikt");
            return (Criteria) this;
        }

        public Criteria andMabaiktGreaterThanOrEqualTo(String value) {
            addCriterion("mabaikt >=", value, "mabaikt");
            return (Criteria) this;
        }

        public Criteria andMabaiktLessThan(String value) {
            addCriterion("mabaikt <", value, "mabaikt");
            return (Criteria) this;
        }

        public Criteria andMabaiktLessThanOrEqualTo(String value) {
            addCriterion("mabaikt <=", value, "mabaikt");
            return (Criteria) this;
        }

        public Criteria andMabaiktLike(String value) {
            addCriterion("mabaikt like", value, "mabaikt");
            return (Criteria) this;
        }

        public Criteria andMabaiktNotLike(String value) {
            addCriterion("mabaikt not like", value, "mabaikt");
            return (Criteria) this;
        }

        public Criteria andMabaiktIn(List<String> values) {
            addCriterion("mabaikt in", values, "mabaikt");
            return (Criteria) this;
        }

        public Criteria andMabaiktNotIn(List<String> values) {
            addCriterion("mabaikt not in", values, "mabaikt");
            return (Criteria) this;
        }

        public Criteria andMabaiktBetween(String value1, String value2) {
            addCriterion("mabaikt between", value1, value2, "mabaikt");
            return (Criteria) this;
        }

        public Criteria andMabaiktNotBetween(String value1, String value2) {
            addCriterion("mabaikt not between", value1, value2, "mabaikt");
            return (Criteria) this;
        }

        public Criteria andThoigianIsNull() {
            addCriterion("thoigian is null");
            return (Criteria) this;
        }

        public Criteria andThoigianIsNotNull() {
            addCriterion("thoigian is not null");
            return (Criteria) this;
        }

        public Criteria andThoigianEqualTo(Date value) {
            addCriterionForJDBCDate("thoigian =", value, "thoigian");
            return (Criteria) this;
        }

        public Criteria andThoigianNotEqualTo(Date value) {
            addCriterionForJDBCDate("thoigian <>", value, "thoigian");
            return (Criteria) this;
        }

        public Criteria andThoigianGreaterThan(Date value) {
            addCriterionForJDBCDate("thoigian >", value, "thoigian");
            return (Criteria) this;
        }

        public Criteria andThoigianGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("thoigian >=", value, "thoigian");
            return (Criteria) this;
        }

        public Criteria andThoigianLessThan(Date value) {
            addCriterionForJDBCDate("thoigian <", value, "thoigian");
            return (Criteria) this;
        }

        public Criteria andThoigianLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("thoigian <=", value, "thoigian");
            return (Criteria) this;
        }

        public Criteria andThoigianIn(List<Date> values) {
            addCriterionForJDBCDate("thoigian in", values, "thoigian");
            return (Criteria) this;
        }

        public Criteria andThoigianNotIn(List<Date> values) {
            addCriterionForJDBCDate("thoigian not in", values, "thoigian");
            return (Criteria) this;
        }

        public Criteria andThoigianBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("thoigian between", value1, value2, "thoigian");
            return (Criteria) this;
        }

        public Criteria andThoigianNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("thoigian not between", value1, value2, "thoigian");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table schema01.test_transcript
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public static class Criterion {
        private String condition;
        private Object value;
        private Object secondValue;
        private boolean noValue;
        private boolean singleValue;
        private boolean betweenValue;
        private boolean listValue;
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table schema01.test_transcript
     *
     * @mbg.generated do_not_delete_during_merge Thu Apr 29 11:11:28 ICT 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}