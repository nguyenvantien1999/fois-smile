package com.fois.Back_end_fois_smile.entity;

import java.util.ArrayList;
import java.util.List;

public class ProgressExample {
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table schema01.progress
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    protected String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table schema01.progress
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    protected boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table schema01.progress
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.progress
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public ProgressExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.progress
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.progress
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.progress
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.progress
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.progress
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.progress
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.progress
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.progress
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.progress
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table schema01.progress
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table schema01.progress
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andMatdIsNull() {
            addCriterion("matd is null");
            return (Criteria) this;
        }

        public Criteria andMatdIsNotNull() {
            addCriterion("matd is not null");
            return (Criteria) this;
        }

        public Criteria andMatdEqualTo(Integer value) {
            addCriterion("matd =", value, "matd");
            return (Criteria) this;
        }

        public Criteria andMatdNotEqualTo(Integer value) {
            addCriterion("matd <>", value, "matd");
            return (Criteria) this;
        }

        public Criteria andMatdGreaterThan(Integer value) {
            addCriterion("matd >", value, "matd");
            return (Criteria) this;
        }

        public Criteria andMatdGreaterThanOrEqualTo(Integer value) {
            addCriterion("matd >=", value, "matd");
            return (Criteria) this;
        }

        public Criteria andMatdLessThan(Integer value) {
            addCriterion("matd <", value, "matd");
            return (Criteria) this;
        }

        public Criteria andMatdLessThanOrEqualTo(Integer value) {
            addCriterion("matd <=", value, "matd");
            return (Criteria) this;
        }

        public Criteria andMatdIn(List<Integer> values) {
            addCriterion("matd in", values, "matd");
            return (Criteria) this;
        }

        public Criteria andMatdNotIn(List<Integer> values) {
            addCriterion("matd not in", values, "matd");
            return (Criteria) this;
        }

        public Criteria andMatdBetween(Integer value1, Integer value2) {
            addCriterion("matd between", value1, value2, "matd");
            return (Criteria) this;
        }

        public Criteria andMatdNotBetween(Integer value1, Integer value2) {
            addCriterion("matd not between", value1, value2, "matd");
            return (Criteria) this;
        }

        public Criteria andTuvungIsNull() {
            addCriterion("tuvung is null");
            return (Criteria) this;
        }

        public Criteria andTuvungIsNotNull() {
            addCriterion("tuvung is not null");
            return (Criteria) this;
        }

        public Criteria andTuvungEqualTo(Boolean value) {
            addCriterion("tuvung =", value, "tuvung");
            return (Criteria) this;
        }

        public Criteria andTuvungNotEqualTo(Boolean value) {
            addCriterion("tuvung <>", value, "tuvung");
            return (Criteria) this;
        }

        public Criteria andTuvungGreaterThan(Boolean value) {
            addCriterion("tuvung >", value, "tuvung");
            return (Criteria) this;
        }

        public Criteria andTuvungGreaterThanOrEqualTo(Boolean value) {
            addCriterion("tuvung >=", value, "tuvung");
            return (Criteria) this;
        }

        public Criteria andTuvungLessThan(Boolean value) {
            addCriterion("tuvung <", value, "tuvung");
            return (Criteria) this;
        }

        public Criteria andTuvungLessThanOrEqualTo(Boolean value) {
            addCriterion("tuvung <=", value, "tuvung");
            return (Criteria) this;
        }

        public Criteria andTuvungIn(List<Boolean> values) {
            addCriterion("tuvung in", values, "tuvung");
            return (Criteria) this;
        }

        public Criteria andTuvungNotIn(List<Boolean> values) {
            addCriterion("tuvung not in", values, "tuvung");
            return (Criteria) this;
        }

        public Criteria andTuvungBetween(Boolean value1, Boolean value2) {
            addCriterion("tuvung between", value1, value2, "tuvung");
            return (Criteria) this;
        }

        public Criteria andTuvungNotBetween(Boolean value1, Boolean value2) {
            addCriterion("tuvung not between", value1, value2, "tuvung");
            return (Criteria) this;
        }

        public Criteria andNguphapIsNull() {
            addCriterion("nguphap is null");
            return (Criteria) this;
        }

        public Criteria andNguphapIsNotNull() {
            addCriterion("nguphap is not null");
            return (Criteria) this;
        }

        public Criteria andNguphapEqualTo(Boolean value) {
            addCriterion("nguphap =", value, "nguphap");
            return (Criteria) this;
        }

        public Criteria andNguphapNotEqualTo(Boolean value) {
            addCriterion("nguphap <>", value, "nguphap");
            return (Criteria) this;
        }

        public Criteria andNguphapGreaterThan(Boolean value) {
            addCriterion("nguphap >", value, "nguphap");
            return (Criteria) this;
        }

        public Criteria andNguphapGreaterThanOrEqualTo(Boolean value) {
            addCriterion("nguphap >=", value, "nguphap");
            return (Criteria) this;
        }

        public Criteria andNguphapLessThan(Boolean value) {
            addCriterion("nguphap <", value, "nguphap");
            return (Criteria) this;
        }

        public Criteria andNguphapLessThanOrEqualTo(Boolean value) {
            addCriterion("nguphap <=", value, "nguphap");
            return (Criteria) this;
        }

        public Criteria andNguphapIn(List<Boolean> values) {
            addCriterion("nguphap in", values, "nguphap");
            return (Criteria) this;
        }

        public Criteria andNguphapNotIn(List<Boolean> values) {
            addCriterion("nguphap not in", values, "nguphap");
            return (Criteria) this;
        }

        public Criteria andNguphapBetween(Boolean value1, Boolean value2) {
            addCriterion("nguphap between", value1, value2, "nguphap");
            return (Criteria) this;
        }

        public Criteria andNguphapNotBetween(Boolean value1, Boolean value2) {
            addCriterion("nguphap not between", value1, value2, "nguphap");
            return (Criteria) this;
        }

        public Criteria andNgheIsNull() {
            addCriterion("nghe is null");
            return (Criteria) this;
        }

        public Criteria andNgheIsNotNull() {
            addCriterion("nghe is not null");
            return (Criteria) this;
        }

        public Criteria andNgheEqualTo(Boolean value) {
            addCriterion("nghe =", value, "nghe");
            return (Criteria) this;
        }

        public Criteria andNgheNotEqualTo(Boolean value) {
            addCriterion("nghe <>", value, "nghe");
            return (Criteria) this;
        }

        public Criteria andNgheGreaterThan(Boolean value) {
            addCriterion("nghe >", value, "nghe");
            return (Criteria) this;
        }

        public Criteria andNgheGreaterThanOrEqualTo(Boolean value) {
            addCriterion("nghe >=", value, "nghe");
            return (Criteria) this;
        }

        public Criteria andNgheLessThan(Boolean value) {
            addCriterion("nghe <", value, "nghe");
            return (Criteria) this;
        }

        public Criteria andNgheLessThanOrEqualTo(Boolean value) {
            addCriterion("nghe <=", value, "nghe");
            return (Criteria) this;
        }

        public Criteria andNgheIn(List<Boolean> values) {
            addCriterion("nghe in", values, "nghe");
            return (Criteria) this;
        }

        public Criteria andNgheNotIn(List<Boolean> values) {
            addCriterion("nghe not in", values, "nghe");
            return (Criteria) this;
        }

        public Criteria andNgheBetween(Boolean value1, Boolean value2) {
            addCriterion("nghe between", value1, value2, "nghe");
            return (Criteria) this;
        }

        public Criteria andNgheNotBetween(Boolean value1, Boolean value2) {
            addCriterion("nghe not between", value1, value2, "nghe");
            return (Criteria) this;
        }

        public Criteria andBaitapIsNull() {
            addCriterion("baitap is null");
            return (Criteria) this;
        }

        public Criteria andBaitapIsNotNull() {
            addCriterion("baitap is not null");
            return (Criteria) this;
        }

        public Criteria andBaitapEqualTo(Boolean value) {
            addCriterion("baitap =", value, "baitap");
            return (Criteria) this;
        }

        public Criteria andBaitapNotEqualTo(Boolean value) {
            addCriterion("baitap <>", value, "baitap");
            return (Criteria) this;
        }

        public Criteria andBaitapGreaterThan(Boolean value) {
            addCriterion("baitap >", value, "baitap");
            return (Criteria) this;
        }

        public Criteria andBaitapGreaterThanOrEqualTo(Boolean value) {
            addCriterion("baitap >=", value, "baitap");
            return (Criteria) this;
        }

        public Criteria andBaitapLessThan(Boolean value) {
            addCriterion("baitap <", value, "baitap");
            return (Criteria) this;
        }

        public Criteria andBaitapLessThanOrEqualTo(Boolean value) {
            addCriterion("baitap <=", value, "baitap");
            return (Criteria) this;
        }

        public Criteria andBaitapIn(List<Boolean> values) {
            addCriterion("baitap in", values, "baitap");
            return (Criteria) this;
        }

        public Criteria andBaitapNotIn(List<Boolean> values) {
            addCriterion("baitap not in", values, "baitap");
            return (Criteria) this;
        }

        public Criteria andBaitapBetween(Boolean value1, Boolean value2) {
            addCriterion("baitap between", value1, value2, "baitap");
            return (Criteria) this;
        }

        public Criteria andBaitapNotBetween(Boolean value1, Boolean value2) {
            addCriterion("baitap not between", value1, value2, "baitap");
            return (Criteria) this;
        }

        public Criteria andMatkIsNull() {
            addCriterion("matk is null");
            return (Criteria) this;
        }

        public Criteria andMatkIsNotNull() {
            addCriterion("matk is not null");
            return (Criteria) this;
        }

        public Criteria andMatkEqualTo(Integer value) {
            addCriterion("matk =", value, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkNotEqualTo(Integer value) {
            addCriterion("matk <>", value, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkGreaterThan(Integer value) {
            addCriterion("matk >", value, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkGreaterThanOrEqualTo(Integer value) {
            addCriterion("matk >=", value, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkLessThan(Integer value) {
            addCriterion("matk <", value, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkLessThanOrEqualTo(Integer value) {
            addCriterion("matk <=", value, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkIn(List<Integer> values) {
            addCriterion("matk in", values, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkNotIn(List<Integer> values) {
            addCriterion("matk not in", values, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkBetween(Integer value1, Integer value2) {
            addCriterion("matk between", value1, value2, "matk");
            return (Criteria) this;
        }

        public Criteria andMatkNotBetween(Integer value1, Integer value2) {
            addCriterion("matk not between", value1, value2, "matk");
            return (Criteria) this;
        }

        public Criteria andMabhIsNull() {
            addCriterion("mabh is null");
            return (Criteria) this;
        }

        public Criteria andMabhIsNotNull() {
            addCriterion("mabh is not null");
            return (Criteria) this;
        }

        public Criteria andMabhEqualTo(String value) {
            addCriterion("mabh =", value, "mabh");
            return (Criteria) this;
        }

        public Criteria andMabhNotEqualTo(String value) {
            addCriterion("mabh <>", value, "mabh");
            return (Criteria) this;
        }

        public Criteria andMabhGreaterThan(String value) {
            addCriterion("mabh >", value, "mabh");
            return (Criteria) this;
        }

        public Criteria andMabhGreaterThanOrEqualTo(String value) {
            addCriterion("mabh >=", value, "mabh");
            return (Criteria) this;
        }

        public Criteria andMabhLessThan(String value) {
            addCriterion("mabh <", value, "mabh");
            return (Criteria) this;
        }

        public Criteria andMabhLessThanOrEqualTo(String value) {
            addCriterion("mabh <=", value, "mabh");
            return (Criteria) this;
        }

        public Criteria andMabhLike(String value) {
            addCriterion("mabh like", value, "mabh");
            return (Criteria) this;
        }

        public Criteria andMabhNotLike(String value) {
            addCriterion("mabh not like", value, "mabh");
            return (Criteria) this;
        }

        public Criteria andMabhIn(List<String> values) {
            addCriterion("mabh in", values, "mabh");
            return (Criteria) this;
        }

        public Criteria andMabhNotIn(List<String> values) {
            addCriterion("mabh not in", values, "mabh");
            return (Criteria) this;
        }

        public Criteria andMabhBetween(String value1, String value2) {
            addCriterion("mabh between", value1, value2, "mabh");
            return (Criteria) this;
        }

        public Criteria andMabhNotBetween(String value1, String value2) {
            addCriterion("mabh not between", value1, value2, "mabh");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table schema01.progress
     * @mbg.generated  Thu May 06 20:20:23 ICT 2021
     */
    public static class Criterion {
        private String condition;
        private Object value;
        private Object secondValue;
        private boolean noValue;
        private boolean singleValue;
        private boolean betweenValue;
        private boolean listValue;
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table schema01.progress
     *
     * @mbg.generated do_not_delete_during_merge Tue May 04 13:16:11 ICT 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}